.dscAppWrapper {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  overflow: hidden;
}

.dscAppContainer {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  > * {
    position: relative;
  }
}

discover-app {
  flex-grow: 1;
}

.dscHitsCounter,
.dscTimeChartHeader {
  flex-grow: 0;
}

.dscApp {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  flex-direction: column;
  height: 100%;
  overflow: hidden;
}

.dscApp__header {
  border-bottom: $euiBorderThin;
  margin-bottom: $euiSize;
}

.dscApp__frame {
  position: relative;
  flex-grow: 1;
  display: flex;
  overflow: hidden;
  @include euiBreakpoint('xs', 's') {
    flex-grow: 0;
    flex-wrap: wrap;
    margin-left: 0;
    margin-right: 0;
    overflow-y: auto;
  }
}

.dscApp__content {
  flex-grow: 1;
  flex-direction: column;
  display: flex;
  overflow: hidden;
  padding-right: $euiSizeS;
}

.dscHistogram {
  display: flex;
  height: $euiSize * 12.5;
  padding: $euiSizeS;
}

// SASSTODO: replace the z-index value with a variable
.dscWrapper {
  padding-left: $euiSizeXL;
  padding-right: $euiSizeS;
  z-index: 1;
  @include euiBreakpoint('xs', 's', 'm') {
    padding-left: $euiSizeS;
  }
}

@include euiPanel('.dscWrapper__content');

.dscWrapper__content {
  padding-top: $euiSizeXS;
  background-color: $euiColorEmptyShade;
  flex-grow: 1;
  flex-direction: column;
  display: flex;
  overflow: hidden;

  @include euiBreakpoint('m', 'l', 'xl') {
    margin-right: $euiSize;
    margin-bottom: $euiSize;
  }

  @include euiBreakpoint('xs', 's') {
    margin: $euiSizeS;
  }

  .kbn-table {
    margin-bottom: 0;
  }
}

.dscTimechart {
  display: block;
  position: relative;

  // SASSTODO: the visualizing component should have an option or a modifier
  .series > rect {
    fill-opacity: 0.5;
    stroke-width: 1;
  }
}

.dscResultCount {
  padding: 0 $euiSizeS;
}

.dscTimechart__header {
  display: flex;
  justify-content: center;
  min-height: $euiSizeXXL;
  padding: $euiSizeXS 0;
}

.dscLoading {
  text-align: center;
  padding: $euiSizeL 0;
}

.dscTable {
  overflow: auto;
  //will-change: transform;

  // SASSTODO: add a monospace modifier to the doc-table component
  .kbnDocTable__row {
    font-family: $euiCodeFontFamily;
    font-size: $euiFontSizeXS;
  }
}

.dscTable__footer {
  background-color: $euiColorLightShade;
  padding: $euiSizeXS $euiSizeS;
  text-align: center;
}

.dscResults {
  flex-grow: 1;
  flex-direction: column;
  display: flex;
  overflow: hidden;
}

.dscResults__interval {
  display: inline-block;
  width: auto;
}

.dscSkipButton {
  position: absolute;
  right: $euiSizeM;
  top: $euiSizeXS;
  z-index: $euiZLevel1;
}

.dscApp .dscFormatSource {
  word-break: break-word;
}

.dscFormatSource__title {
  background-color: transparentize(shade($euiColorPrimary, 20%), 0.9);
  border-radius: $euiBorderRadius / 2;
  color: $euiTextColor;
  padding: ($euiSizeXS / 2) $euiSizeXS;
  margin-right: $euiSizeXS;
  word-break: normal;
  display: inline;
}
.dscFormatSource__description {
  display: inline;
}

.dscTableFixedScroll {
  overflow-x: auto;
  padding-bottom: 0;

  + .dscTableFixedScroll__scroller {
    position: fixed;
    bottom: 0;
    overflow-x: auto;
    overflow-y: hidden;
  }
}

.dscCollapsibleSidebar__collapseButton {
  align-self: flex-start;
  &:not(.closed) {
    position: relative;
    left: -$euiSizeS;
  }
}

.dscCollapsibleSidebar {
  position: relative;
  z-index: $euiZLevel1;

  &.closed {
    width: 0 !important;
    border-right-width: 0;
    border-left-width: 0;
  }
}

@include euiBreakpoint('xs', 's', 'm') {
  .dscCollapsibleSidebar {
    &.closed {
      display: none;
    }

    .dscCollapsibleSidebar__collapseButton {
      display: none;
    }
  }
}
